# Shelfie — Frontpage Landing Page Specification (for Replit Build)

> Goal: Provide a clear, actionable brief that a code‑gen agent (Replit) can use to implement a fast, accessible, responsive, and conversion‑focused landing page for the **Shelfie** book app.

---

## 1) One‑sentence product summary (for meta & above‑the‑fold)

**Shelfie** is the delightfully simple way to **scan, organise, and love your books** — barcode to beautiful library in seconds.

---

## 2) Primary audiences

1. **Avid readers / home librarians** – want order, wish‑lists, and quick capture.
2. **Parents & teachers** – track school/classroom libraries, duplicates, and loans.
3. **Collectors** – care about editions, condition, and shelf aesthetics.

---

## 3) Core value propositions (display as 3–4 feature cards under hero)

* **Instant capture** – Scan a barcode; Shelfie fetches rich metadata & cover art.
* **Your library, anywhere** – Search, sort, and filter across all devices.
* **Looks like your shelf** – Realistic 3D covers sized proportionally.
* **Privacy by design** – You control your data. Export anytime.

(Include subtle micro‑copy: “No ads. No clutter.”)

---

## 4) Brand voice & tone

Warm, clear, quietly clever. Avoid jargon. UK English. Emphasise calm & care over hype.

---

## 5) Page objectives & success metrics

* **Primary CTA:** “Get the app” (or “Start scanning”) → store link or signup.
* **Secondary CTA:** “Try on the web” → lightweight web demo.
* **KPIs:** CTA click‑through rate, time‑to‑first‑interaction, scroll depth, demo starts, email signups.

---

## 6) Information architecture (sections, order)

1. **Header / Nav** – Logo, Features, Pricing, FAQ, Privacy, Get the app.
2. **Hero** – Headline, subhead, CTA(s), device mockup, subtle animated 3D shelf.
3. **How it works (3 steps)** – Scan → Auto‑enrich → Enjoy your shelf.
4. **Feature highlights** – Grid of 4 cards (from §3) + expanded bullets.
5. **Showcase carousel** – Realistic 3D book covers with proportional sizing demo.
6. **Social proof** – Short quotes, star rating, logos if available.
7. **Pricing** – Free tier + Pro (simple, transparent, monthly/annual).
8. **FAQ** – 6–8 concise Q\&As.
9. **Privacy & data** – Plain English promise with link to policy.
10. **Footer** – Links, legal, ©, socials, region selector.

---

## 7) Copy draft (ready‑to‑use)

**Hero headline:**

> Build a beautiful library you’ll actually use

**Hero subhead:**

> Scan barcodes, fetch the right details, and see your books on a shelf that looks like your shelf.

**Primary CTA:** Get the app
**Secondary CTA:** Try on the web

**3‑step “How it works”:**

1. **Scan** – Point at a barcode. Shelfie recognises the book in a snap.
2. **Auto‑enrich** – We fetch title, author, edition, dimensions, and cover.
3. **Enjoy** – Browse your library, filter by author/genre, and share a shelf.

**Feature bullets (longer):**

* **3D shelf view** that respects **real book dimensions** — tall hardbacks look tall; slim paperbacks look slim.
* **Lightning‑fast scanning** with offline queue — capture even with patchy Wi‑Fi.
* **Edition‑aware metadata** (ISBN‑10/13) and **regional covers** (e.g., amazon.com.au).
* **Lists & tags** for “To Read”, “Lent to…”, “Favourites”, “Gift ideas”.
* **Data portability** – CSV/JSON export. Your library, your rules.

**Privacy teaser:**

> No dark patterns. No data resale. You can export or delete your data at any time.

**Pricing (example, adjustable):**

* **Free** – Unlimited scans up to 100 books, basic shelf, export.
* **Pro** – Unlimited library, smart shelves, 3D realism, bulk import, loan tracking.

**FAQ (starter set):**

* **Does it work without perfect light?** Yes — we optimise for shaky hands and everyday lighting.
* **Can I import existing spreadsheets?** Yes — CSV import is supported.
* **Do you store my photos?** Only what you save. You can delete everything.
* **Will my covers match my region?** We fetch region‑specific images where available.
* **Can I share a shelf with family?** Yes — invite, view‑only or edit.

---

## 8) Visual design system

**Style:** Clean, bookish, tactile. Generous whitespace. Soft shadows.
**Colour:** Neutral base; a single accent for CTAs.
**Type:** Friendly humanist sans for UI; optional book‑ish serif for headings.
**Components:**

* Header/Nav (sticky), Button (primary/secondary), Card, Badge, Tabs, Accordion (FAQ), Toast, Modal (video/demo), Feature grid, Testimonial, Pricing table, Footer.

**Motion:**

* Subtle hero shelf animation (parallax float, 8–12s loop).
* Button hover & focus states (scale 1.02, shadow).
* Reduce/disable animations if `prefers-reduced-motion`.

**Imagery:**

* Device mockups (phone scanning a barcode).
* 3D book covers preview (see §11 for spec).

---

## 9) Accessibility (must‑haves)

* WCAG 2.2 AA colour contrast.
* Full keyboard navigation and visible focus rings.
* Semantic HTML5 landmarks (header, main, nav, section, footer).
* Alt text for all imagery; descriptive button labels.
* Motion respects `prefers-reduced-motion`.

---

## 10) Performance & SEO

* **LCP target < 2.5s** on 4G; JS < 200KB initial.
* Use responsive images (`srcset`, modern formats).
* Preload hero font; avoid FOIT.
* Meta title (<=60 chars): *Shelfie — Scan barcodes. Build a beautiful library.*
* Meta description (<=155 chars): *Scan books, auto‑fetch details, and see your library in a beautiful, realistic 3D shelf.*
* Open Graph & Twitter cards with hero image.

---

## 11) Interactive demo spec — 3D Shelf Preview (key differentiator)

**Purpose:** Show realism & proportional sizing above the fold without heavy GPU.

**Requirements:**

* Render 8–12 sample books in a horizontally scrollable shelf.
* **Proportional sizing** driven by `width`, `height`, `thickness` (mm) in data.
* Prevent overlaps with layout algorithm (see below) and min/max scaling per viewport.
* Fallback to 2D flat covers if WebGL unavailable.

**Data model for demo (example):**

```json
[
  {"title":"Stolen Focus","w":129,"h":198,"t":22,"cover":"/img/stolen-focus.jpg"},
  {"title":"Horology","w":170,"h":240,"t":30,"cover":"/img/horology.jpg"}
]
```

**Layout algorithm (CSS/JS outline):**

* Map physical mm → CSS px via **viewport‑aware scale factor** `S`.
* Clamp per breakpoint: mobile S ≤ 0.6; tablet S ≤ 0.75; desktop S ≤ 1.0.
* Use `grid-auto-flow: column; grid-auto-columns: max-content; column-gap: clamp(8px, 2vw, 24px)` to **avoid overlap**.
* Each book is a CSS 3D transform with perspective and a spine element; fall back to flat image with border if `prefers-reduced-motion`.

**Quality touches:**

* Subtle shadow based on `t` (thickness); small jitter on idle hover.
* Tooltip on focus/hover: title & author.

---

## 12) Integrations & data notes (future‑proofing copy & UI)

* **Rainforest API** (Amazon data): support `amazon_domain` (e.g., `amazon.com.au`) for regional covers & dimensions.
* ISBN‑10/ISBN‑13 normalisation.
* Local cache with background refresh.

---

## 13) Analytics & events (instrumentation IDs)

* `click_cta_primary`
* `click_cta_secondary`
* `scrolled_50`
* `open_pricing`
* `start_demo`
* `faq_open_{question_id}`

---

## 14) Technical build guidance (for Replit)

**Stack:** React + TypeScript + Vite; Tailwind CSS; shadcn/ui components; Framer Motion (optional, respectful of reduced‑motion).

**Directory structure:**

```
src/
  components/
    Header.tsx
    Hero.tsx
    DemoShelf.tsx
    Features.tsx
    HowItWorks.tsx
    Testimonials.tsx
    Pricing.tsx
    FAQ.tsx
    Footer.tsx
  lib/
    books-demo.ts (sample data with dimensions)
    analytics.ts
  app.tsx
  index.css (Tailwind)
```

**Key component contracts:**

* `<DemoShelf books={BookDemoItem[]} reducedMotion?: boolean />`
* `BookDemoItem = { title: string; w: number; h: number; t: number; cover: string }`

**CSS essentials:**

* `:root { --shelf-scale: clamp(0.45, 0.6 + 1vw, 1); }`
* Container: `max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8`.
* Use `grid` with `auto-flow: column` for the shelf row; no absolute positioning.

**Accessibility hooks:**

* `aria-label` on CTAs; `aria-live="polite"` for demo hints.

---

## 15) Acceptance criteria (must pass)

* **No overlapping books** at any breakpoint.
* **Proportional book sizes** consistent with provided `w/h/t` ratios.
* **CLS < 0.05** (no layout jumps); images have fixed aspect ratio boxes.
* **Keyboard‑usable** demo: left/right scroll via buttons & arrow keys.
* **All CTAs visible on first viewport** on common laptop (1366×768) and mobile (390×844).

---

## 16) Test plan (manual)

* Mobile (iOS Safari), Android Chrome, Desktop Chrome/Firefox/Safari.
* Toggle `prefers-reduced-motion` and confirm animation fallbacks.
* Slow 3G network throttling: page remains readable; hero text loads before demo.

---

## 17) Assets checklist

* Logo SVG (monochrome + colour).
* 8–12 sample cover images (1200px tall, web‑optimised, alt text list).
* Social proof quotes (name, role) — optional placeholders.

---

## 18) Example alt texts (starter)

* “Cover of *Stolen Focus* by Johann Hari.”
* “Cover of *Horology* — tall hardback edition.”

---

## 19) Legal & privacy links (footer)

* Terms • Privacy • Data export • Contact

---

## 20) Prompt block for Replit (copy‑paste)

**System intent:**

> You are building a production‑quality marketing landing page for the Shelfie app. Use React + TypeScript + Vite, Tailwind CSS, and shadcn/ui. Prioritise performance, accessibility (WCAG 2.2 AA), and responsiveness. Keep the initial JS bundle small. Implement the DemoShelf component to render proportionally sized 3D books without overlap. Respect `prefers-reduced-motion`.

**Tasks:**

1. Scaffold the project and pages per the directory structure above.
2. Implement all sections in §6 with the copy from §7.
3. Build `DemoShelf` using the data model and layout rules in §11.
4. Add analytics event stubs from §13.
5. Ensure all acceptance criteria in §15 are met and ship a single `index.html` entry.

**Deliverables:**

* Running page at `/` with all sections.
* `books-demo.ts` populated with 10 sample items.
* Lighthouse ≥ 95 Performance/Accessibility/Best Practices/SEO on a fresh build.

---

## 21) Future enhancements (non‑blocking)

* Video hero showing live scanning.
* “Share a shelf” link generator.
* Localised copy & domain picker for region‑specific covers.

---

**End of specification.**
